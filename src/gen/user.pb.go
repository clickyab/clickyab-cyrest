// Code generated by protoc-gen-go.
// source: user.proto
// DO NOT EDIT!

package heliumgen

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UserType int32

const (
	UserType_Normal   UserType = 0
	UserType_Operator UserType = 1
	UserType_Admin    UserType = 2
)

var UserType_name = map[int32]string{
	0: "Normal",
	1: "Operator",
	2: "Admin",
}
var UserType_value = map[string]int32{
	"Normal":   0,
	"Operator": 1,
	"Admin":    2,
}

func (x UserType) String() string {
	return proto.EnumName(UserType_name, int32(x))
}
func (UserType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// objects
type User struct {
	Username  string   `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	UserType  UserType `protobuf:"varint,2,opt,name=user_type,json=userType,enum=heliumgen.UserType" json:"user_type,omitempty"`
	LastLogin string   `protobuf:"bytes,3,opt,name=last_login,json=lastLogin" json:"last_login,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// Login request
type LoginPayload struct {
	CorrelationId string `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId" json:"correlation_id,omitempty"`
	Username      string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Password      string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *LoginPayload) Reset()                    { *m = LoginPayload{} }
func (m *LoginPayload) String() string            { return proto.CompactTextString(m) }
func (*LoginPayload) ProtoMessage()               {}
func (*LoginPayload) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

// Login success response
type LoginResponse struct {
	CorrelationId string `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId" json:"correlation_id,omitempty"`
	Token         string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	User          *User  `protobuf:"bytes,3,opt,name=user" json:"user,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *LoginResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "heliumgen.User")
	proto.RegisterType((*LoginPayload)(nil), "heliumgen.LoginPayload")
	proto.RegisterType((*LoginResponse)(nil), "heliumgen.LoginResponse")
	proto.RegisterEnum("heliumgen.UserType", UserType_name, UserType_value)
}

var fileDescriptor1 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0xdd, 0x5c, 0x47, 0xfb, 0xdc, 0x66, 0x89, 0x82, 0x65, 0x20, 0x48, 0x45, 0x10, 0x0f,
	0x55, 0xea, 0xcd, 0x9b, 0x47, 0x45, 0x54, 0xaa, 0x9e, 0x4b, 0x5c, 0x1f, 0x33, 0x98, 0x26, 0x35,
	0xc9, 0x94, 0xfd, 0xf7, 0x36, 0x59, 0x57, 0x6a, 0x4f, 0xde, 0xde, 0xf7, 0xbe, 0xbe, 0xf7, 0x7b,
	0xfd, 0x02, 0xb0, 0xd2, 0xa8, 0x92, 0x4a, 0x49, 0x23, 0x49, 0xf0, 0x81, 0x9c, 0xad, 0xca, 0x25,
	0x8a, 0x58, 0xc3, 0xe8, 0xad, 0x36, 0xc8, 0x1c, 0x7c, 0xfb, 0x81, 0xa0, 0x25, 0x46, 0x83, 0x93,
	0xc1, 0x79, 0x90, 0xb5, 0x9a, 0x5c, 0x41, 0x60, 0xeb, 0xdc, 0xac, 0x2b, 0x8c, 0x86, 0xb5, 0x39,
	0x4b, 0x0f, 0x92, 0x76, 0x45, 0x62, 0xe7, 0x5f, 0x6b, 0x6b, 0x33, 0x61, 0x2b, 0x72, 0x0c, 0xc0,
	0xa9, 0x36, 0x39, 0x97, 0x4b, 0x26, 0xa2, 0x5d, 0xb7, 0x2f, 0xb0, 0x9d, 0x07, 0xdb, 0x88, 0x4b,
	0x98, 0xb8, 0xe2, 0x99, 0xae, 0xb9, 0xa4, 0x05, 0x39, 0x83, 0xd9, 0x42, 0x2a, 0x85, 0x9c, 0x1a,
	0x26, 0x45, 0xce, 0x8a, 0xe6, 0x84, 0x69, 0xa7, 0x7b, 0x57, 0xfc, 0xb9, 0x71, 0xd8, 0xbb, 0xb1,
	0xf6, 0x2a, 0xaa, 0xf5, 0x8f, 0x54, 0x45, 0xc3, 0x6b, 0x75, 0xfc, 0x05, 0x53, 0x87, 0xcb, 0x50,
	0x57, 0x52, 0x68, 0xfc, 0x2f, 0xef, 0x10, 0x3c, 0x23, 0x3f, 0x51, 0x34, 0xb0, 0x8d, 0x20, 0xa7,
	0x30, 0xb2, 0x54, 0x47, 0xd9, 0x4b, 0xf7, 0x7b, 0x41, 0x64, 0xce, 0xbc, 0xb8, 0x04, 0x7f, 0x1b,
	0x0b, 0x01, 0x18, 0x3f, 0x4a, 0x55, 0x52, 0x1e, 0xee, 0x90, 0x09, 0xf8, 0x4f, 0x15, 0x2a, 0x6a,
	0xa4, 0x0a, 0x07, 0x24, 0x00, 0xef, 0xb6, 0x28, 0x99, 0x08, 0x87, 0xe9, 0x7d, 0x13, 0xc9, 0x0b,
	0xaa, 0x6f, 0xb6, 0x40, 0x72, 0x03, 0x9e, 0xd3, 0xe4, 0xa8, 0x03, 0xe8, 0x86, 0x36, 0x8f, 0xfa,
	0xc6, 0xf6, 0xf7, 0xde, 0xc7, 0xee, 0x95, 0xaf, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x89, 0xd1,
	0x6a, 0xd4, 0xf3, 0x01, 0x00, 0x00,
}
