---
- name: build the code
  hosts: vagrant

  tasks:
    - name: clean all data
      make:
        target: clean
        chdir: /home/develop/cyrest

    - name: generate codes
      make:
        target: codegen
        chdir: /home/develop/cyrest

    - name: create migration
      make:
        target: migration
        chdir: /home/develop/cyrest

    - name: build binaries
      make:
        target: all
        chdir: /home/develop/cyrest

    - name: build front end
      make:
        target: build-js
        chdir: /home/develop/cyrest

# This is the staging build. it will build the app (using golang docker image) and run it with docker-compose
- name: staging build
  hosts: staging

  tasks:
    - name: copy go binary files to web servers
      synchronize:
        src: "{{ playbook_dir }}/../../bin/"
        dest: "/home/cy/cyrest/bin/"
        delete: yes
        rsync_opts: "--exclude=.git --exclude=*.sh --exclude=gb* --exclude=go-bindata --exclude=fswatch --exclude=codegen"
        checksum: yes
        times: no

    - name: copy swagger files
      synchronize:
        src: "{{ playbook_dir }}/../../3rd/swagger/"
        dest: "/home/cy/cyrest/swagger/"
        delete: yes
        checksum: yes
        times: no

    - name: copy frontend files
      synchronize:
        src: "{{ playbook_dir }}/../../front/public/"
        dest: "/home/cy/cyrest/public/"
        delete: yes
        checksum: yes
        times: no        

    - name: copy compose file to server
      synchronize:
        src: "{{ playbook_dir }}/"
        dest: "/home/cy/compose/"
        rsync_opts: "--exclude=.git --exclude=*.retry --exclude=staging*"
        delete: yes
        checksum: yes
        times: no

    - shell: /home/cy/.local/bin/docker-compose up -d
      args:
        chdir: /home/cy/compose/

    - shell: /home/cy/.local/bin/docker-compose restart app
      args:
        chdir: /home/cy/compose/