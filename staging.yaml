---
- name: build the code
  hosts: vagrant

  tasks:
    - shell: git submodule update
      args:
        chdir: /home/cy/cyrest

    - name: clone the code
      git:
        repo: git@github.com:clickyab/clickyab-cyrest.git
        dest: /home/cy/cyrest
        force: yes

    - shell: git checkout master && git pull
      args:
        chdir: /home/cy/cyrest/front

    - name: clean all data
      make:
        target: clean
        chdir: /home/cy/cyrest

    - name: get dependencies
      make:
        target: conditional-restore
        chdir: /home/cy/cyrest

    - name: generate codes
      make:
        target: codegen
        chdir: /home/cy/cyrest

    - name: generate codes
      make:
        target: codegen
        chdir: /home/cy/cyrest

    - name: create migration
      make:
        target: migration
        chdir: /home/cy/cyrest

    - name: build binaries
      make:
        target: all
        chdir: /home/cy/cyrest

    - name: build front end
      make:
        target: build-js
        chdir: /home/develop/cyrest

# This is the staging build. it will build the app (using golang docker image) and run it with docker-compose
- name: staging build
  hosts: staging

  tasks:
#    - name: install certain python modules for docker
#      pip:
#        name: "{{ item.name }}"
#        version: "{{ item.version }}"
#        state: present
#      with_items:
#      - { name: docker, version: 2.0.0 }
#      - { name: docker-py, version: 1.10.6 }

    - name: make sure docker compose installed and ready
      pip:
        name: docker-compose

    # - name: pull redis image
    #   docker_image:
    #     name: registry.clickyab.ae/clickyab/redis

    # - name: pull mariadb image
    #   docker_image:
    #     name: registry.clickyab.ae/clickyab/mariadb

    - name: Creates directory
      file:
        path: /home/cy/cyrest
        state: directory


    - name: copy go binary files to web servers
      synchronize:
        src: "{{ playbook_dir }}/../../bin/"
        dest: "/home/cy/cyrest/bin/"
        delete: yes
        rsync_opts: "--exclude=.git --exclude=*.sh --exclude=gb* --exclude=go-bindata --exclude=fswatch --exclude=codegen"
        checksum: yes
        times: no

    - name: copy swagger files
      synchronize:
        src: "{{ playbook_dir }}/../../3rd/swagger/"
        dest: "/home/cy/cyrest/swagger/"
        delete: yes
        checksum: yes
        times: no

    - name: copy frontend files
      synchronize:
        src: "{{ playbook_dir }}/../../front/public/"
        dest: "/home/cy/cyrest/public/"
        delete: yes
        checksum: yes
        times: no

    - name: copy compose file to server
      synchronize:
        src: "{{ playbook_dir }}/"
        dest: "/home/cy/compose/"
        rsync_opts: "--exclude=.git --exclude=*.retry --exclude=staging*"
        delete: yes
        checksum: yes
        times: no

    - shell: /home/cy/.local/bin/docker-compose build
      args:
        chdir: /home/cy/compose/

    - shell: /home/cy/.local/bin/docker-compose up -d
      args:
        chdir: /home/cy/compose/

    - shell: /home/cy/.local/bin/docker-compose restart app cyborg got
      args:
        chdir: /home/cy/compose/
